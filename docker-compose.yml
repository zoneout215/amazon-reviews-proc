version: '3.8'
x-airflow-common: &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  environment: &airflow-environment
    AIRFLOW__CORE__REMOTE_LOGGING: 'False'
    AIRFLOW__CORE__BASE_LOG_FOLDER: '/opt/airflow/logs'
    AIRFLOW__CORE__DAGS_FOLDER: '/opt/airflow/dags'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__WEBSERVER__BASE_URL: http://localhost:8080
    GOOGLE_APPLICATION_CREDENTIALS: 'application_default_credentials.json'
    AIRFLOW_CONN_GOOGLE_CLOUD_DEFAULT: google-cloud-platform://?extra__google_cloud_platform__key_path=application_default_credentials.json&extra__google_cloud_platform__project=e-analogy-449921-p7
  env_file:
    - local.env
  restart: always
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/plugins:/opt/airflow/plugins
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/source_data:/opt/airflow/source_data
    - ./data_sources.tsv:/opt/airflow/data_sources.tsv
    - ./dbt:/opt/airflow/dbt
    - ./dbt/profiles.yml:/home/airflow/.dbt
    - ./migrations:/opt/airflow/migrations
    - ./OUTPUT_FILE:/opt/airflow/application_default_credentials.json

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s


  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    environment:
      <<: *airflow-environment
      AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
      AIRFLOW__CORE__PARALLELISM: 8
      AIRFLOW__CORE__DAG_CONCURRENCY: 8
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      - postgres
    command: webserver

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    environment:
      <<: *airflow-environment
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      - airflow-webserver
    command: scheduler
